# https://stackoverflow.com/questions/6477239/anonymize-ip-logging-in-nginx
map $remote_addr $ip_anonym1 {
 default 0.0.0;
 "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" $ip;
 "~(?P<ip>[^:]+:[^:]+):" $ip;
}

map $remote_addr $ip_anonym2 {
 default .0;
 "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
 "~(?P<ip>[^:]+:[^:]+):" ::;
}

map $ip_anonym1$ip_anonym2 $ip_anonymized {
 default 0.0.0.0;
 "~(?P<ip>.*)" $ip;
}

log_format searxng '$ip_anonymized - $remote_user [$time_local] "$uri" $status $body_bytes_sent "$http_user_agent" "$gzip_ratio"';

server {
    listen 80;
    #listen [::]:80;
    listen 443 ssl http2;
    #listen [::]:443 ssl http2;

    gzip on;
    gunzip on;

    server_name searx.fi;

    access_log /var/log/nginx/searx.fi_access.log searxng;

    # TODO: get these from variable (use jinja2 to fill):
    ssl_certificate /etc/ssl/nginx/searx.fi_ecc/fullchain.cer;
    ssl_certificate_key /etc/ssl/nginx/searx.fi_ecc/searx.fi.key;

    # if not connected to HTTPS, perma-redirect to HTTPS
    if ($https = '') { return 301 https://$host$request_uri; }

    # this config is crafted from https://github.com/searxng/searxng-docker/blob/master/Caddyfile
    location / {
        # add_header 

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
	    proxy_pass http://127.0.0.1:8010/;

        # Do not cache
        add_header "Cache-Control" "no-cache, no-store";
        add_header "Pragma" "no-cache";

        # Enable HTTP Strict Transport Security (HSTS) to force clients to always connect via HTTPS
        add_header "Strict-Transport-Security" "max-age=31536000; includeSubDomains; preload";
        # Enable cross-site filter (XSS) and tell browser to block detected attacks
        add_header "X-XSS-Protection" "1; mode=block";
        # Prevent some browsers from MIME-sniffing a response away from the declared Content-Type
        add_header "X-Content-Type-Options" "nosniff";
        # Disable some features
        add_header "Permissions-Policy" "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),focus-without-user-activation=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()";
        # Disable some features (legacy)
        add_header "Feature-Policy" "accelerometer 'none';ambient-light-sensor 'none'; autoplay 'none';camera 'none';encrypted-media 'none';focus-without-user-activation 'none'; geolocation 'none';gyroscope 'none';magnetometer 'none';microphone 'none';midi 'none';payment 'none';picture-in-picture 'none'; speaker 'none';sync-xhr 'none';usb 'none';vr 'none'";
        # Referer
        add_header "Referrer-Policy" "no-referrer";
        # X-Robots-Tag
        add_header "X-Robots-Tag" "noindex, noarchive, nofollow";
    }

    location /static/ {
        expires 1y;
        add_header "Cache-Control" "public";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
	    proxy_pass http://127.0.0.1:8010/static/;
    }

    location /image_proxy/ {
        
    }

    # API (we do not use regex matching because it has performance penalties)
    location = /config {
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "GET, OPTIONS";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
	    proxy_pass http://127.0.0.1:8010/config;
    }
    location = /healthz {
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "GET, OPTIONS";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
	    proxy_pass http://127.0.0.1:8010/healthz;
    }
    location = /stats/errors {
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "GET, OPTIONS";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
	    proxy_pass http://127.0.0.1:8010/stats/errors;
    }
    location = /stats/checker {
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "GET, OPTIONS";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
	    proxy_pass http://127.0.0.1:8010/stats/errors;
    }

    location /goaccess {
        autoindex off;
        alias /var/www/goaccess/searx.fi/;
        access_log off;
        log_not_found off;
    }

    location /goaccessws {
        proxy_pass http://127.0.0.1:8011;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        access_log off;
        log_not_found off;
    }
}
